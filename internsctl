#!/bin/bash

# internsctl script to get CPU and Memory information

case $1 in
    "cpu")
        case $2 in
            "getinfo")
                cpu_info=$(lscpu)
                echo "CPU Information:"
                echo "$cpu_info"
                ;;
            *)
                echo "Invalid argument for 'cpu'. Use 'getinfo'."
                exit 1
                ;;
        esac
        ;;
    "memory")
        case $2 in
            "getinfo")
                mem_info=$(free)
                echo "Memory Information:"
                echo "$mem_info"
                ;;
            *)
                echo "Invalid argument for 'memory'. Use 'getinfo'."
                exit 1
                ;;
        esac
        ;;
    "user")
        case $2 in
            "create")
                if [ -z "$3" ]; then
                    echo "Enter the username kindly."
                    exit 1
                fi
                user=$3
                useradd -m -s /bin/bash $user

                if [ $? -eq 0 ]; then
                    echo "User created successfully."
                else
                    echo "Error creating $user."
                    exit 1
                fi
                ;;
            "list")
                if [ "$option" == "--sudo-only" ]; then
                    sudo_users=$(grep -Po '^sudo.+:\K.*$' /etc/group | tr ',' '\n')
                    echo "Users with sudo permissions:"
                    echo "$sudo_users"
                else
                    regular_users=$(awk -F: '$3 >= 1000 && $1 != "nobody" {print $1}' /etc/passwd)
                    echo "All users:"
                    echo "$regular_users"
                fi
                ;;            
	     *)
                echo "Invalid argument."
                exit 1 
                ;;
        esac
        ;;
     "file")
        case $2 in
            "getinfo")
                if [ -z "$3" ]; then
                    echo "Please provide a file name."
                    exit 1
                fi

                file_name=$3
                if [ -e "$file_name" ]; then
                    size_option=false
                    permissions_option=false
                    owner_option=false
                    last_modified_option=false

                    while [ "$#" -gt 0 ]; do
                        case "$1" in
                            --size|-s)
                                size_option=true
                                ;;
                            --permissions|-p)
                                permissions_option=true
                                ;;
                            --owner|-o)
                                owner_option=true
                                ;;
                            --last-modified|-m)
                                last_modified_option=true
                                ;;
                            *)
                                echo "Invalid option: $1"
                                exit 1
                                ;;
                        esac
                        shift
                    done

                    file_info=$(stat "$file_name")

                    if [ "$size_option" = true ]; then
                        echo "Size(B): $(echo "$file_info" | grep "Size:" | awk '{print $2}')"
                    fi

                    if [ "$permissions_option" = true ]; then
                        echo "Permissions: $(echo "$file_info" | grep "Access:" | awk '{print $2}')"
                    fi

                    if [ "$owner_option" = true ]; then
                        echo "Owner: $(echo "$file_info" | grep "Uid:" | awk '{print $4}')"
                    fi

                    if [ "$last_modified_option" = true ]; then
                        echo "Last Modified: $(echo "$file_info" | grep "Modify:" | awk '{print $2, $3, $4, $5}')"
                    fi

                    # If no specific options provided, print the entire file information
                    if [ "$size_option" = false ] && [ "$permissions_option" = false ] && [ "$owner_option" = false ] && [ "$last_modified_option" = false ]; then
                        echo "File Information:"
                        echo "$file_info"
                    fi
                else
                    echo "File '$file_name' does not exist."
                    exit 1
                fi
                ;;
            *)
                echo "Invalid argument for 'file'. Use 'getinfo'."
                exit 1
                ;;
        esac
        ;;
    *)
        echo "Usage: $0 {cpu|memory|user} getinfo"
        exit 1
        ;;
esac

